From 7f74c93a6b6040d6b19a35577419d981f069b33e Mon Sep 17 00:00:00 2001
From: Peter Sobolewski <76622105+psobolewskiPhD@users.noreply.github.com>
Date: Sun, 26 Mar 2023 19:35:37 +0200
Subject: [PATCH] Installation: Add libmamba solver to conda Note (#110)

# Description

Add mention of using regular conda but with the `libmamba` solver, as a
way to resolve installation issues. See
https://conda.github.io/conda-libmamba-solver/libmamba-vs-classic/
Currently, we suggest mamba. This works well, but breaks copy-paste of
`conda install ...` and other instructions. Changing the solver gives
much of the benefit, without needing to change the command.
See discussion at: https://github.com/napari/napari/issues/5509


## Type of change
- [x] Fixes or improves existing content

# References
closes https://github.com/napari/docs/issues/96

## Final checklist:
- [x] My PR is the minimum possible work for the desired functionality

Co-authored-by: Grzegorz Bokota <bokota+github@gmail.com>
---
 docs/tutorials/fundamentals/installation.md | 29 +++++++++++++++------
 1 file changed, 21 insertions(+), 8 deletions(-)

diff --git a/docs/tutorials/fundamentals/installation.md b/docs/tutorials/fundamentals/installation.md
index 0112d644..8a798e5c 100644
--- a/docs/tutorials/fundamentals/installation.md
+++ b/docs/tutorials/fundamentals/installation.md
@@ -122,14 +122,27 @@ conda install -c conda-forge "napari=*=*pyside2"
 In some cases, `conda`'s default solver can struggle to find out which packages need to be
 installed for napari. If it takes too long or you get the wrong version of napari
 (see below), consider:
-1. Overriding your default channels to use only `conda-forge` by adding `--override-channels`
-and specifying the napari and Python versions explicitly. For example, use {{ python_version_code }}
-to get Python {{ python_version }} and {{ napari_conda_version }} to specify the napari version as
-{{ napari_version }}, the current release.
-
-2. You can try installing [`mamba`](https://github.com/mamba-org/mamba) in your base
-environment with `conda install -n base -c conda-forge mamba` and use its faster solver
-by replacing `conda` for `mamba` in the above instructions.
+1. Overriding your default channels to use only `conda-forge` by adding
+`--override-channels` and specifying the napari and Python versions explicitly. 
+For example, use {{ python_version_code }} to get Python {{ python_version }} and
+{{ napari_conda_version }} to specify the napari version as {{ napari_version }}, 
+the current release.
+
+2. Switching to the new, faster [`libmamba` solver](https://conda.github.io/conda-libmamba-solver/libmamba-vs-classic/), 
+by updating your `conda` (>22.11), if needed, and then installing and activating 
+the solver, as follows:
+```
+conda update -n base conda
+conda install -n base conda-libmamba-solver
+conda config --set solver libmamba
+```
+3. Alternately, consider installing [`mamba`](https://github.com/mamba-org/mamba)
+in your base environment with `conda install -n base -c conda-forge mamba`. 
+Then you can use `mamba` by replacing `conda` with `mamba` in the installation instructions, for example:
+```
+mamba install napari
+```
+
 ````
 
 
