From d21a63eeff3816d6ec7e80df96e38502cfb8e0c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Melissa=20Weber=20Mendon=C3=A7a?= <melissawm@gmail.com>
Date: Sun, 5 Feb 2023 15:32:00 -0300
Subject: [PATCH] Improve makefile (#41)

# Description
Makes building paths more generic and allows building from a local
napari clone folder.

## Type of change
- [x] Bug-fix (non-breaking change which fixes an issue)

# References
Related to, but does not fix, #5222
---
 docs/_scripts/prep_docs.py             | 10 ++++-----
 docs/developers/documentation/index.md | 28 ++++++++------------------
 3 files changed, 30 insertions(+), 33 deletions(-)


diff --git a/docs/_scripts/prep_docs.py b/docs/_scripts/prep_docs.py
index bf02d5c6..3d401e2c 100644
--- a/docs/_scripts/prep_docs.py
+++ b/docs/_scripts/prep_docs.py
@@ -7,23 +7,23 @@
 from pathlib import Path

 from packaging.version import parse

 DOCS = Path(__file__).parent.parent.absolute()
 NPE = DOCS.parent.absolute() / 'npe2'


 def prep_npe2():
     #   some plugin docs live in npe2 for testing purposes
     from subprocess import check_call

     npe2_version = version("npe2")

-    check_call("rm -rf npe2".split())
+    check_call(f"rm -rf {NPE}".split())
     check_call(f"git clone https://github.com/napari/npe2 {NPE}".split())
     if not parse(npe2_version).is_devrelease:
         check_call(f"git checkout tags/v{npe2_version}".split(), cwd=NPE)
-    check_call([sys.executable, "npe2/_docs/render.py", DOCS / 'plugins'])
-    check_call("rm -rf npe2".split())
+    check_call([sys.executable, f"{NPE}/_docs/render.py", DOCS / 'plugins'])
+    check_call(f"rm -rf {NPE}".split())


 def main():
diff --git a/docs/developers/documentation/index.md b/docs/developers/documentation/index.md
index db838a08..928d4fc1 100644
--- a/docs/developers/documentation/index.md
+++ b/docs/developers/documentation/index.md
@@ -22,8 +22,8 @@ you will require:
 - A [GitHub](https://github.com) account.

 You should first [fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo)
-and clone the [napari/docs](https://github.com/napari/docs) repo to your
-machine, and navigate to the resulting folder:
+and clone the [napari/napari](https://github.com/napari/napari) and the [napari/docs](https://github.com/napari/docs) repo to your
+machine. Next, navigate to your local clone of the `napari/docs` repository:

 ```bash
 git clone git@github.com:<your-username>/docs.git napari-docs
@@ -36,25 +36,13 @@ a local repository folder named `napari-docs`. Alternately, you could also
 rename the repository when forking `napari/docs`.
 ````

-- **If you wish to add/amend documentation that does not contain code, you will
-  require a clean conda environment with napari docs dependencies installed.**
+Since the API reference documentation (autogenerated from the napari code docstrings) and the example gallery are sourced from the `napari/napari` repository, before you can build the documentation locally, you need:

-  Starting at the folder where you cloned the `napari/docs` repository, and
-  after activating your clean `conda` environment, you can install these with
-  `python -m pip install -r requirements.txt`.
+- a clean `conda` environment;
+- a development installation of napari. Follow the [contributor guide](dev-installation) for details on how to do this;
+- the napari documentation requirements. Starting at the folder where you cloned the `napari/docs` repository, and after activating your clean `conda` environment, you can install these with `python -m pip install -r requirements.txt`.

-  These dependencies will allow you to preview your document locally, as it
-  would appear on `napari.org`, and they will also install `jupytext`, which you
-  will need to contribute documents containing code or viewer interactions.
-
-- **If you wish to add/amend documentation that does contain code, you will also
-  require a clean conda environment with napari docs dependencies installed, but
-  with a development installation of napari.**
-
-  See the [contributor guide](dev-installation) for details. You should have
-  [Jupyter notebook](https://jupyter.org/) installed. Familiarity with Jupyter
-  notebooks (code cells and markdown cells) as well as using napari through a
-  Jupyter notebook is recommended.
+This setup, with these dependencies, will allow you to preview your document locally as it would appear on `napari.org`. It will also install [Jupyter notebook](https://jupyter.org/) and [jupytext](https://jupytext.readthedocs.io), which you will need to contribute documents containing code or viewer interactions.

 ## 0. Before you start

@@ -72,7 +60,7 @@ want to contribute. The paths are listed in parentheses below.
   in depth content about napari architecture, development choices and some complex features
 - [**Tutorials**](../../tutorials/index) (in [`napari/docs/tutorials`](https://github.com/napari/docs/tree/main/docs/tutorials)):
   detailed, reproducible step by step guides, usually combining multiple napari features to complete a potentially complex task
-- [**How-tos**](../../howtos/index) (in [`napari/docs/howtos/`](https://github.com/napari/docs/tree/main/docs/howtos)):
+- [**How-tos**](../../howtos/index) (in [`napari/docs/howtos`](https://github.com/napari/docs/tree/main/docs/howtos)):
   simple step by step guides demonstrating the use of common features
 - [**Getting started**](../../tutorials/start_index) (in [`napari/docs/tutorials/fundamentals`](https://github.com/napari/docs/tree/main/docs/tutorials/fundamentals):
   these documents are a mix of tutorials and how-tos covering the fundamentals of installing and working with napari for beginners
